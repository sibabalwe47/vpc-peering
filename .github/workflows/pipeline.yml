name: VPC peering module
on: [push]

permissions:
  contents: read

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  terraform_init:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.9
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform init
        id: init
        run: terraform init

      - name: Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: module
          path: ./*
          retention-days: 1

  terraform_plan:
    runs-on: ubuntu-latest
    needs: terraform_init
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.9
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Artifacts
        uses: actions/download-artifact@v3

      - name: Terraform plan
        working-directory: /home/runner/work/vpc-peering/vpc-peering
        run: |
          chmod +x .terraform/providers/registry.terraform.io/hashicorp/aws/5.7.0/linux_amd64/terraform-provider-aws_v5.7.0_x5
          terraform plan -var-file="values.tfvars"

  terraform_cost:
    runs-on: ubuntu-latest
    needs: terraform_plan
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Infracost installation and authentication
        run: |
          curl -fsSL https://raw.githubusercontent.com/infracost/infracost/master/scripts/install.sh | sh
          infracost --version
          infracost configure set api_key ${{ secrets.INFRACOST_API_KEY }}
          infracost breakdown --path .

  terraform_test:
    runs-on: ubuntu-latest
    needs: [terraform_cost, terraform_plan]
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.9
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Pending....
        run: echo "Required knowledge of GoLang and Terratest."

  terraform_apply:
    runs-on: ubuntu-latest
    needs: [terraform_test]
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.9
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Terraform apply
        run: terraform apply

  terraform_destroy:
    runs-on: ubuntu-latest
    needs: terraform_apply
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.9
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Terraform destroy
        run: terraform destroy
